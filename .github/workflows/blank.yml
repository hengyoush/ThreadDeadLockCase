# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'
    - name: Cache
      uses: actions/cache@v2
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ~/.m2/repository
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
        restore-keys: |
            ${{ runner.os }}-maven-
    - name: Build JAR
      run: mvn clean package
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ secrets.ALIYUN_DOCKER_REPO_URL }}
        # Username used to log against the Docker registry
        username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: set lower case repo name
      run: |
        echo "REPO_LC=${REPO,,}" >>${GITHUB_ENV}
      env:
        REPO: '${{ github.repository }}'
    - name: Build and push Docker image
      uses: docker/build-push-action@v5.1.0
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.ALIYUN_DOCKER_REPO_URL }}/${{ env.REPO_LC }}:${{ steps.extract_branch.outputs.branch }}
    - name: Send HTTP Request
      uses: Tyrrrz/action-http-request@1.1.2
      with:
        url: http://deadlock.cloud/spe/exp/redeploy-callback?success=true&branchName=${{ steps.extract_branch.outputs.branch }}
        method: GET
        fail-on-error: false
          
